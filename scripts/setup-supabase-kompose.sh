#!/bin/bash
set -euo pipefail

echo "🚀 Setting up Supabase with Kompose..."

# Create a clean Supabase directory
mkdir -p k8s/base/supabase-kompose
cd k8s/base/supabase-kompose

# Download official Supabase docker-compose
echo "📥 Downloading official Supabase docker-compose..."
curl -o docker-compose.yml https://raw.githubusercontent.com/supabase/supabase/master/docker/docker-compose.yml
curl -o .env.example https://raw.githubusercontent.com/supabase/supabase/master/docker/.env.example

# Create a basic .env file with our secrets
echo "🔐 Creating .env file..."
cat > .env <<EOF
# Generated by setup script
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-$(openssl rand -hex 32)}
JWT_SECRET=${JWT_SECRET:-$(openssl rand -hex 32)}
ANON_KEY=${ANON_KEY:-your-anon-key}
SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY:-your-service-role-key}

# API Config
SITE_URL=http://localhost:3000
API_EXTERNAL_URL=http://localhost:8000
SUPABASE_PUBLIC_URL=http://localhost:8000

# Database
POSTGRES_HOST=db
POSTGRES_PORT=5432
POSTGRES_DB=postgres

# Ports
KONG_HTTP_PORT=8000
KONG_HTTPS_PORT=8443
POOLER_PROXY_PORT_TRANSACTION=6543

# Studio
STUDIO_DEFAULT_ORGANIZATION=Default
STUDIO_DEFAULT_PROJECT=Default

# Email (disabled for now)
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=false
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=
SMTP_ADMIN_EMAIL=admin@example.com
SMTP_SENDER_NAME=Supabase

# Storage
STORAGE_BACKEND=file
FILE_SIZE_LIMIT=52428800

# Disable signup initially
DISABLE_SIGNUP=false
ENABLE_ANONYMOUS_USERS=false
ENABLE_PHONE_SIGNUP=false
ENABLE_PHONE_AUTOCONFIRM=false

# Logs
LOGFLARE_PUBLIC_ACCESS_TOKEN=$(openssl rand -hex 16)
LOGFLARE_PRIVATE_ACCESS_TOKEN=$(openssl rand -hex 16)

# Other required vars
DASHBOARD_USERNAME=supabase
DASHBOARD_PASSWORD=$(openssl rand -hex 16)
SECRET_KEY_BASE=$(openssl rand -hex 64)
VAULT_ENC_KEY=$(openssl rand -hex 32)
FUNCTIONS_VERIFY_JWT=false
PGRST_DB_SCHEMAS=public,storage,graphql_public
JWT_EXPIRY=3600
IMGPROXY_ENABLE_WEBP_DETECTION=true
POOLER_DEFAULT_POOL_SIZE=20
POOLER_MAX_CLIENT_CONN=100
POOLER_TENANT_ID=local
POOLER_DB_POOL_SIZE=10
DOCKER_SOCKET_LOCATION=/var/run/docker.sock

# URL paths
MAILER_URLPATHS_INVITE=/auth/v1/verify
MAILER_URLPATHS_CONFIRMATION=/auth/v1/verify
MAILER_URLPATHS_RECOVERY=/auth/v1/verify
MAILER_URLPATHS_EMAIL_CHANGE=/auth/v1/verify
EOF

# Fix the docker socket volume issue for Kompose
echo "🔧 Fixing docker-compose for Kompose compatibility..."
sed -i.bak 's|${DOCKER_SOCKET_LOCATION}:/var/run/docker.sock:ro,z|/var/run/docker.sock:/var/run/docker.sock|g' docker-compose.yml

# Convert with Kompose
echo "🔄 Converting to Kubernetes manifests..."
../../../kompose convert -f docker-compose.yml

# Create kustomization.yaml
echo "📝 Creating kustomization.yaml..."
cat > kustomization.yaml <<'EOF'
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: invisible

resources:
  - analytics-service.yaml
  - auth-service.yaml
  - db-service.yaml
  - functions-service.yaml
  - imgproxy-service.yaml
  - kong-service.yaml
  - meta-service.yaml
  - realtime-service.yaml
  - rest-service.yaml
  - storage-service.yaml
  - studio-service.yaml
  - supavisor-service.yaml
  - vector-service.yaml
  - analytics-deployment.yaml
  - auth-deployment.yaml
  - db-deployment.yaml
  - functions-deployment.yaml
  - imgproxy-deployment.yaml
  - kong-deployment.yaml
  - meta-deployment.yaml
  - realtime-deployment.yaml
  - rest-deployment.yaml
  - storage-deployment.yaml
  - studio-deployment.yaml
  - supavisor-deployment.yaml
  - vector-deployment.yaml
  - db-config-persistentvolumeclaim.yaml

# Remove container_name from all deployments
patches:
  - target:
      kind: Deployment
      name: ".*"
    patch: |-
      - op: remove
        path: /spec/template/metadata/labels/io.kompose.service
      - op: remove
        path: /spec/selector/matchLabels/io.kompose.service
EOF

echo "✅ Supabase Kompose setup complete!"
echo ""
echo "Generated files in: k8s/base/supabase-kompose/"
echo "Environment saved to: k8s/base/supabase-kompose/.env"
echo ""
echo "Next steps:"
echo "1. Update k8s/base/supabase/kustomization.yaml to point to supabase-kompose/"
echo "2. Apply with ArgoCD"